// Generated by data binding compiler. Do not edit!
package com.omar_aly.sary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewpager2.widget.ViewPager2;
import com.airbnb.lottie.LottieAnimationView;
import com.omar_aly.sary.R;
import com.omar_aly.sary.ui.home.HomeViewModel;
import com.tbuonomo.viewpagerdotsindicator.DotsIndicator;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentMainBinding extends ViewDataBinding {
  @NonNull
  public final DotsIndicator dotsIndicator;

  @NonNull
  public final LinearLayout linSpecialOrder;

  @NonNull
  public final RecyclerView listCatalog;

  @NonNull
  public final LottieAnimationView loading;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView specialOrderClick;

  @NonNull
  public final ViewPager2 viewPager;

  @Bindable
  protected HomeViewModel mViewModel;

  protected FragmentMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      DotsIndicator dotsIndicator, LinearLayout linSpecialOrder, RecyclerView listCatalog,
      LottieAnimationView loading, ConstraintLayout main, TextView specialOrderClick,
      ViewPager2 viewPager) {
    super(_bindingComponent, _root, _localFieldCount);
    this.dotsIndicator = dotsIndicator;
    this.linSpecialOrder = linSpecialOrder;
    this.listCatalog = listCatalog;
    this.loading = loading;
    this.main = main;
    this.specialOrderClick = specialOrderClick;
    this.viewPager = viewPager;
  }

  public abstract void setViewModel(@Nullable HomeViewModel viewModel);

  @Nullable
  public HomeViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentMainBinding>inflateInternal(inflater, R.layout.fragment_main, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentMainBinding>inflateInternal(inflater, R.layout.fragment_main, null, false, component);
  }

  public static FragmentMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentMainBinding)bind(component, view, R.layout.fragment_main);
  }
}
