// Generated by Dagger (https://dagger.dev).
package com.omar_aly.sary.base;

import androidx.databinding.ViewDataBinding;
import androidx.lifecycle.ViewModelProvider;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseDialogFragment_MembersInjector<T extends ViewDataBinding, V extends BaseViewModel> implements MembersInjector<BaseDialogFragment<T, V>> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  public BaseDialogFragment_MembersInjector(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static <T extends ViewDataBinding, V extends BaseViewModel> MembersInjector<BaseDialogFragment<T, V>> create(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    return new BaseDialogFragment_MembersInjector<T, V>(viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(BaseDialogFragment<T, V> instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.omar_aly.sary.base.BaseDialogFragment.viewModelFactory")
  public static <T extends ViewDataBinding, V extends BaseViewModel> void injectViewModelFactory(
      BaseDialogFragment<T, V> instance, ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
