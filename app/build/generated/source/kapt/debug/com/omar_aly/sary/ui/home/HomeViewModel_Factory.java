// Generated by Dagger (https://dagger.dev).
package com.omar_aly.sary.ui.home;

import com.omar_aly.domain.usecase.item.GetBannersUseCase;
import com.omar_aly.domain.usecase.item.GetCatalogUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<GetBannersUseCase> getBannersUseCaseProvider;

  private final Provider<GetCatalogUseCase> getCatalogUseCaseProvider;

  public HomeViewModel_Factory(Provider<GetBannersUseCase> getBannersUseCaseProvider,
      Provider<GetCatalogUseCase> getCatalogUseCaseProvider) {
    this.getBannersUseCaseProvider = getBannersUseCaseProvider;
    this.getCatalogUseCaseProvider = getCatalogUseCaseProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(getBannersUseCaseProvider.get(), getCatalogUseCaseProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<GetBannersUseCase> getBannersUseCaseProvider,
      Provider<GetCatalogUseCase> getCatalogUseCaseProvider) {
    return new HomeViewModel_Factory(getBannersUseCaseProvider, getCatalogUseCaseProvider);
  }

  public static HomeViewModel newInstance(GetBannersUseCase getBannersUseCase,
      GetCatalogUseCase getCatalogUseCase) {
    return new HomeViewModel(getBannersUseCase, getCatalogUseCase);
  }
}
